name: dbd-bot-ci

on:
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"
      - "drawio/**"
  pull_request:
    paths-ignore:
      - "*.md"
      - "drawio/**"
permissions:
  pull-requests: write
  id-token: write
jobs:
  ts-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cdk
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Setup dependencies
        run: npm ci
      - name: eslint
        if: ${{ always() }}
        run: npm run eslint
      - name: prettier check
        if: ${{ always() }}
        run: npm run prettier:check
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install portry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin/poetry" >> $GITHUB_PATH
      - name: Poetry Version
        run: |
          poetry --version
      - name: Poetry Install Dependencies
        run: |
          poetry install --no-interaction
      - name: Python lint
        if: ${{ always() }}
        run: |
          make lint
      - name: Test with pytest
        if: ${{ always() }}
        continue-on-error: true
        run: |
          set -o pipefail
          poetry run pytest --junitxml=pytest.xml --cov-report=term-missing --cov=src | tee pytest-coverage.txt
      - name: Pytest coverage comment
        if: contains(github.event_name, 'pull_request')
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: app/pytest-coverage.txt
          junitxml-path: app/pytest.xml
          coverage-path-prefix: app/
  aws_cdk:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cdk
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Setup dependencies
        run: npm ci
      - name: AWS set token
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-deploy
          aws-region: "us-east-2"
      - name: Test
        if: contains(github.event_name, 'pull_request')
        run: npm run test
      - name: CDK deploy
        if: contains(github.event_name, 'push')
        run: npm run cdk:deploy
