// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "BatchFunction768110B6": Object {
      "DependsOn": Array [
        "IamRoleForLambdaDefaultPolicyE9A800CF",
        "IamRoleForLambdaEEC2E2DA",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED]",
        },
        "Environment": Object {
          "Variables": Object {
            "ENV_NAME": "prod",
            "LINE_CHANNEL_ACCESS_TOKEN": "[SEC REMOVED]",
            "LINE_CHANNEL_SECRET": "[SEC REMOVED]",
            "S3_BUCKET_NAME": "line-ids",
            "S3_KEY_NAME": "ids.json",
            "TWITTER_BEARER_TOKEN": "[SEC REMOVED]",
          },
        },
        "Handler": "src/lambda_batch.lambda_handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IamRoleForLambdaEEC2E2DA",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BatchFunctionLogRetention791C2146": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "BatchFunction768110B6",
              },
            ],
          ],
        },
        "RetentionInDays": 60,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "DBDBotRuleAllowEventRuleMyTestStackBatchFunction266B4DA607C642BF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "BatchFunction768110B6",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "DBDBotRuleEA0C7F1B",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DBDBotRuleEA0C7F1B": Object {
      "Properties": Object {
        "ScheduleExpression": "cron(30 0,12 * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "BatchFunction768110B6",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "IamRoleForLambdaDefaultPolicyE9A800CF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::line-ids",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::line-ids/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IamRoleForLambdaDefaultPolicyE9A800CF",
        "Roles": Array [
          Object {
            "Ref": "IamRoleForLambdaEEC2E2DA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IamRoleForLambdaEEC2E2DA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "lambda-role",
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED]",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WebhookHandlerFunctionC34AB3E4": Object {
      "DependsOn": Array [
        "IamRoleForLambdaDefaultPolicyE9A800CF",
        "IamRoleForLambdaEEC2E2DA",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED]",
        },
        "Environment": Object {
          "Variables": Object {
            "ENV_NAME": "prod",
            "LINE_CHANNEL_ACCESS_TOKEN": "[SEC REMOVED]",
            "LINE_CHANNEL_SECRET": "[SEC REMOVED]",
            "S3_BUCKET_NAME": "line-ids",
            "S3_KEY_NAME": "ids.json",
            "TWITTER_BEARER_TOKEN": "[SEC REMOVED]",
          },
        },
        "Handler": "src/lambda_webhook_handler.lambda_handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IamRoleForLambdaEEC2E2DA",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "WebhookHandlerFunctionFunctionUrl84D7D658": Object {
      "Properties": Object {
        "AuthType": "NONE",
        "TargetFunctionArn": Object {
          "Fn::GetAtt": Array [
            "WebhookHandlerFunctionC34AB3E4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Url",
    },
    "WebhookHandlerFunctionLogRetention8DFD3B50": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "WebhookHandlerFunctionC34AB3E4",
              },
            ],
          ],
        },
        "RetentionInDays": 60,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "WebhookHandlerFunctioninvokefunctionurlC5DD9BDF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunctionUrl",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "WebhookHandlerFunctionC34AB3E4",
            "Arn",
          ],
        },
        "FunctionUrlAuthType": "NONE",
        "Principal": "*",
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
