// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot test 1`] = `
{
  "Mappings": {
    "DefaultCrNodeVersionMap": {
      "af-south-1": {
        "value": "nodejs16.x",
      },
      "ap-east-1": {
        "value": "nodejs16.x",
      },
      "ap-northeast-1": {
        "value": "nodejs16.x",
      },
      "ap-northeast-2": {
        "value": "nodejs16.x",
      },
      "ap-northeast-3": {
        "value": "nodejs16.x",
      },
      "ap-south-1": {
        "value": "nodejs16.x",
      },
      "ap-south-2": {
        "value": "nodejs16.x",
      },
      "ap-southeast-1": {
        "value": "nodejs16.x",
      },
      "ap-southeast-2": {
        "value": "nodejs16.x",
      },
      "ap-southeast-3": {
        "value": "nodejs16.x",
      },
      "ca-central-1": {
        "value": "nodejs16.x",
      },
      "cn-north-1": {
        "value": "nodejs16.x",
      },
      "cn-northwest-1": {
        "value": "nodejs16.x",
      },
      "eu-central-1": {
        "value": "nodejs16.x",
      },
      "eu-central-2": {
        "value": "nodejs16.x",
      },
      "eu-north-1": {
        "value": "nodejs16.x",
      },
      "eu-south-1": {
        "value": "nodejs16.x",
      },
      "eu-south-2": {
        "value": "nodejs16.x",
      },
      "eu-west-1": {
        "value": "nodejs16.x",
      },
      "eu-west-2": {
        "value": "nodejs16.x",
      },
      "eu-west-3": {
        "value": "nodejs16.x",
      },
      "me-central-1": {
        "value": "nodejs16.x",
      },
      "me-south-1": {
        "value": "nodejs16.x",
      },
      "sa-east-1": {
        "value": "nodejs16.x",
      },
      "us-east-1": {
        "value": "nodejs16.x",
      },
      "us-east-2": {
        "value": "nodejs16.x",
      },
      "us-gov-east-1": {
        "value": "nodejs16.x",
      },
      "us-gov-west-1": {
        "value": "nodejs16.x",
      },
      "us-iso-east-1": {
        "value": "nodejs14.x",
      },
      "us-iso-west-1": {
        "value": "nodejs14.x",
      },
      "us-isob-east-1": {
        "value": "nodejs14.x",
      },
      "us-west-1": {
        "value": "nodejs16.x",
      },
      "us-west-2": {
        "value": "nodejs16.x",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueS3BUCKETNAMEC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "S3_BUCKET_NAME",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueS3KEYNAMEC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "S3_KEY_NAME",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueTONOTIFICATIONC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "TO_NOTIFICATION",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "BatchFunction768110B6": {
      "DependsOn": [
        "IamRoleForLambdaDefaultPolicyE9A800CF",
        "IamRoleForLambdaEEC2E2DA",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED]",
        },
        "Environment": {
          "Variables": {
            "ENV_NAME": "prod",
            "S3_BUCKET_NAME": {
              "Ref": "SsmParameterValueS3BUCKETNAMEC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
            "S3_KEY_NAME": {
              "Ref": "SsmParameterValueS3KEYNAMEC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
        },
        "Handler": "src/lambda_batch.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "IamRoleForLambdaEEC2E2DA",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BatchFunctionLogGroupERRORbatchFilter7387FF17": {
      "Properties": {
        "FilterPattern": "ERROR",
        "LogGroupName": {
          "Fn::GetAtt": [
            "BatchFunctionLogRetention791C2146",
            "LogGroupName",
          ],
        },
        "MetricTransformations": [
          {
            "MetricName": "[ERROR]Batch",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "BatchFunctionLogRetention791C2146": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "BatchFunction768110B6",
              },
            ],
          ],
        },
        "RetentionInDays": 60,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "DBDBotRuleAllowEventRuleMyTestStackBatchFunction266B4DA607C642BF": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BatchFunction768110B6",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "DBDBotRuleEA0C7F1B",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DBDBotRuleEA0C7F1B": {
      "Properties": {
        "ScheduleExpression": "cron(30 0,12 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "BatchFunction768110B6",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DbdTopic54D06245": {
      "Type": "AWS::SNS::Topic",
    },
    "DbdTopicTokenSubscription1CB27C04C": {
      "Properties": {
        "Endpoint": {
          "Ref": "SsmParameterValueTONOTIFICATIONC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "Protocol": "email",
        "TopicArn": {
          "Ref": "DbdTopic54D06245",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "ErrorBatchAlarmE5BA3B6F": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "DbdTopic54D06245",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "[ERROR]Batch",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "ErrorWebhookHandlerAlarm3327A287": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "DbdTopic54D06245",
          },
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "[ERROR]WebhookHandler",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "IamRoleForLambdaDefaultPolicyE9A800CF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "SsmParameterValueS3BUCKETNAMEC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "SsmParameterValueS3BUCKETNAMEC96584B6F00A464EAD1953AFF4B05118Parameter",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IamRoleForLambdaDefaultPolicyE9A800CF",
        "Roles": [
          {
            "Ref": "IamRoleForLambdaEEC2E2DA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IamRoleForLambdaEEC2E2DA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMReadOnlyAccess",
              ],
            ],
          },
        ],
        "RoleName": "lambda-role",
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED]",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "DefaultCrNodeVersionMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WebhookHandlerFunctionC34AB3E4": {
      "DependsOn": [
        "IamRoleForLambdaDefaultPolicyE9A800CF",
        "IamRoleForLambdaEEC2E2DA",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED]",
        },
        "Environment": {
          "Variables": {
            "ENV_NAME": "prod",
            "S3_BUCKET_NAME": {
              "Ref": "SsmParameterValueS3BUCKETNAMEC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
            "S3_KEY_NAME": {
              "Ref": "SsmParameterValueS3KEYNAMEC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
        },
        "Handler": "src/lambda_webhook_handler.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "IamRoleForLambdaEEC2E2DA",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "WebhookHandlerFunctionFunctionUrl84D7D658": {
      "Properties": {
        "AuthType": "NONE",
        "TargetFunctionArn": {
          "Fn::GetAtt": [
            "WebhookHandlerFunctionC34AB3E4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Url",
    },
    "WebhookHandlerFunctionLogGroupERRORwebhookFilter174294BF": {
      "Properties": {
        "FilterPattern": "ERROR",
        "LogGroupName": {
          "Fn::GetAtt": [
            "WebhookHandlerFunctionLogRetention8DFD3B50",
            "LogGroupName",
          ],
        },
        "MetricTransformations": [
          {
            "MetricName": "[ERROR]WebhookHandler",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "WebhookHandlerFunctionLogRetention8DFD3B50": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "WebhookHandlerFunctionC34AB3E4",
              },
            ],
          ],
        },
        "RetentionInDays": 60,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "WebhookHandlerFunctioninvokefunctionurlC5DD9BDF": {
      "Properties": {
        "Action": "lambda:InvokeFunctionUrl",
        "FunctionName": {
          "Fn::GetAtt": [
            "WebhookHandlerFunctionC34AB3E4",
            "Arn",
          ],
        },
        "FunctionUrlAuthType": "NONE",
        "Principal": "*",
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
